# coding: utf8

"""
Django settings for elpaso project.

Generated by 'django-admin startproject' using Django 1.10.4.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

# ############################################################################
# ########## Libraries #############
# ##################################

from configparser import RawConfigParser
import logging
from logging.handlers import RotatingFileHandler
import os
import sys

# ############################################################################
# ########### SETTINGS ############
# #################################

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# SECURITY
config = RawConfigParser()
if os.path.isfile(r"secret.ini"):
    config.read(r"secret.ini")
    SECRET_KEY = config.get('security', 'SECRET_KEY')
    PG_USER_PSWD = config.get('security', 'PG_USER_PSWD')
    DEBUG_SETTING = config.get("development", "DEBUG")
    ADMINS = [('El Paso', config.get("mail", "SMTP_USER")), ]
    EMAIL_HOST_USER = config.get("mail", "SMTP_USER")
    EMAIL_HOST_PASSWORD = config.get("mail", "SMTP_PSWD")
    RECIPIENTS = config.get("mail", "TO_RECEIVERS").split(',')
else:
    SECRET_KEY = os.environ.get("ELPASO_DB_KEY")
    PG_USER_PSWD = os.environ.get("ELPASO_PG_USER_PSWD")
    DEBUG_SETTING = os.environ.get("ELPASO_DEBUG_SETTING")
    ADMINS =  [('El Paso', "elpaso@georezo.net"), ]
    EMAIL_HOST_USER = "elpaso@georezo.net"
    EMAIL_HOST_PASSWORD = ""
    RECIPIENTS = "elpaso@georezo.net"

# FORCE DEBUG MODE IF DEV SERVER IS USED
RUNNING_DEVSERVER = (len(sys.argv) > 1 and sys.argv[1] == 'runserver')
if RUNNING_DEVSERVER or int(DEBUG_SETTING):
    DEBUG = True
else:
    DEBUG = False


# LOG ------------------------------------------------------------------------
if DEBUG:
    logging.basicConfig(
        level=logging.DEBUG,
        format="%(asctime)s || %(levelname)s "
               "|| %(process)d || %(thread)d"
               "|| %(module)s || %(lineno)s || %(message)s ",
    )
    logger = logging.getLogger("ElPaso")
    logging.captureWarnings(True)
    logger.setLevel(logging.DEBUG)  # all errors will be get
    log_form = logging.Formatter("%(asctime)s || %(levelname)s "
                                 "|| %(process)d || %(thread)d"
                                 "|| %(module)s || %(lineno)s || %(message)s")
    # log file
    logfile = RotatingFileHandler("logs/LOG_ElPaso_debug.log", "a", 5000000, 1)
    logfile.setLevel(logging.DEBUG)
    logfile.setFormatter(log_form)
    logger.addHandler(logfile)
    logger.info('============== EL PASO - DEBUG START =======================')
else:
    # will output to logging file
    logger = logging.getLogger()
    logging.captureWarnings(True)
    logger.setLevel(logging.INFO)  # all errors will be get
    log_form = logging.Formatter("%(asctime)s || %(levelname)s ||"
                                 "%(module)s || %(lineno)s || %(message)s")
    # log file
    logfile = RotatingFileHandler("logs/LOG_ElPaso_prod.log", "a", 5000000, 1)
    logfile.setLevel(logging.INFO)
    logfile.setFormatter(log_form)
    logger.addHandler(logfile)
    logger.info('============== EL PASO - PRODUCTION START =================')


# HOSTS -----------------------------------------------------------------------
if DEBUG:
    ALLOWED_HOSTS = ["dev.elgeopaso.fr",
                     "163.172.42.190",
                     "localhost"]
    BASE_URL = "http://163.172.42.190"
else:
    # HOSTS
    ALLOWED_HOSTS = ["185.123.84.13",
                     "elgeopaso.georezo.net",
                     "geotribu.georezo.net",
                     "www.elgeopaso.fr"]
    BASE_URL = "https://elgeopaso.georezo.net"


# CACHE -----------------------------------------------------------------------
if DEBUG:
    CACHES = {
        'default': {
            'BACKEND': 'django.core.cache.backends.dummy.DummyCache',
        }
    }
else:
    cache_dir = os.path.realpath("tmp")
    CACHES = {
        'default': {
            'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',
            'LOCATION': cache_dir,
            'KEY_PREFIX': 'elpaso_',
            'TIMEOUT': 1800,
        }
    }

# APPS -----------------------------------------------------------------------
if DEBUG:
    INSTALLED_APPS = [
        'accounts.apps.AccountsConfig',
        'api.apps.ApiConfig',
        'cms.apps.CmsConfig',
        'jobs.apps.JobsConfig',
        # Django and 3rd party apps --------------------
        'suit',
        'django.contrib.admin',
        'django.contrib.auth',
        'django.contrib.contenttypes',
        'django.contrib.messages',
        'django.contrib.sessions',
        "django.contrib.sitemaps",
        'django.contrib.staticfiles',
        'ckeditor',
        "ckeditor_uploader",
        'gunicorn',
        'django_extensions',
        # 'cities_light',
        'rest_framework',
        'rest_framework_swagger',
        'rest_framework_filters',
        'django_filters',
        'widget_tweaks',
        'debug_toolbar',
    ]

    MIDDLEWARE = [
        'django.middleware.cache.UpdateCacheMiddleware',
        'django.middleware.common.CommonMiddleware',
        'django.middleware.cache.FetchFromCacheMiddleware',
        'django.middleware.security.SecurityMiddleware',
        'django.contrib.sessions.middleware.SessionMiddleware',
        'django.middleware.common.CommonMiddleware',
        'django.middleware.csrf.CsrfViewMiddleware',
        'django.contrib.auth.middleware.AuthenticationMiddleware',
        'django.contrib.messages.middleware.MessageMiddleware',
        'django.middleware.clickjacking.XFrameOptionsMiddleware',
        # debug
        'debug_toolbar.middleware.DebugToolbarMiddleware',
    ]
else:
    INSTALLED_APPS = [
         'accounts.apps.AccountsConfig',
         'api.apps.ApiConfig',
         'cms.apps.CmsConfig',
         'jobs.apps.JobsConfig',
         # Django and 3rd party apps --------------------
         'suit',
         'django.contrib.admin',
         'django.contrib.auth',
         'django.contrib.contenttypes',
         'django.contrib.messages',
         'django.contrib.sessions',
         "django.contrib.sitemaps",
         'django.contrib.staticfiles',
         'ckeditor',
         "ckeditor_uploader",
         'gunicorn',
         'leaflet',
         'django_extensions',
         'rest_framework',
         'rest_framework_swagger',
         'django_filters',
         'django.contrib.gis',
         'widget_tweaks',
     ]

    MIDDLEWARE = [
         'django.middleware.cache.UpdateCacheMiddleware',
         'django.middleware.common.CommonMiddleware',
         'django.middleware.cache.FetchFromCacheMiddleware',
         'django.middleware.security.SecurityMiddleware',
         'django.contrib.sessions.middleware.SessionMiddleware',
         'django.middleware.common.CommonMiddleware',
         'django.middleware.csrf.CsrfViewMiddleware',
         'django.contrib.auth.middleware.AuthenticationMiddleware',
         'django.contrib.messages.middleware.MessageMiddleware',
         'django.middleware.clickjacking.XFrameOptionsMiddleware',
     ]


ROOT_URLCONF = 'elpaso.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.media',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'elpaso.wsgi.application'


# DATABASE -------------------------------------------------------------------
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases
if DEBUG and not os.environ.get("TRAVIS"):
    DATABASES = {
        'default': {
             'ENGINE': 'django.db.backends.sqlite3',
             'NAME': os.path.join(BASE_DIR, 'elpaso.sqlite'),
             'OPTIONS': {
                'timeout': 30,
                        },
                    },
        }
elif os.environ.get("TRAVIS"):
    print("on travis")
    DATABASES = {
        'default': {
            'ENGINE': "django.contrib.gis.db.backends.postgis",
            'NAME': "elpaso",
            'USER': 'geotribu',
            'PASSWORD': "TRAVISTESTDB",
            'OPTIONS': {
                'connect_timeout': 30,
                    },
        },
        } 
else:
    DATABASES = {
        # 'default': {
        #     'ENGINE': 'django.db.backends.sqlite3',
        #     'NAME': os.path.join(BASE_DIR, 'elpaso.sqlite'),
        # },
        'default': {
            'ENGINE': "django.contrib.gis.db.backends.postgis",
            'NAME': "elpaso",
            'USER': 'geotribu',
            'PASSWORD': PG_USER_PSWD,
            'OPTIONS': {
                'connect_timeout': 30,
                    },
        },
        }

# PASSWORDS ------------------------------------------------------------------
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# INTERNATIONALIZATION -------------------------------------------------------
# https://docs.djangoproject.com/en/1.10/topics/i18n/
LANGUAGE_CODE = 'fr-fr'
TIME_ZONE = 'Europe/Paris'
USE_I18N = True
USE_L10N = True
USE_TZ = True


# STATIC and MEDIA FILES ------------------------------------------------------
# https://docs.djangoproject.com/en/1.10/howto/static-files/
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATICFILES_DIRS = [
        os.path.join(BASE_DIR, "assets"),
]

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'uploads')

# EMAIL --------------------------------------------------------------------
# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_USE_TLS = True
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587

# ===========================================================================
# APPS SETTINGS
# ===========================================================================

# JOBS
CRAWL_FREQUENCY = "hourly"
CRAWL_RSS_SIZE = 200
FIXTURE_DIRS = ("/jobs/fixtures/",)
NLTK_DATA = os.path.join(BASE_DIR, "nltk_data")
os.environ["NLTK_DATA"] = NLTK_DATA

# # CITIES
# CITIES_LIGHT_TRANSLATION_LANGUAGES = ['fr', ]
# CITIES_LIGHT_INCLUDE_COUNTRIES = ["BE", "CA", "CH​", "FR"]
# CITIES_LIGHT_INCLUDE_CITY_TYPES = ['PPL', 'PPLA', 'PPLA2', 'PPLA3', 'PPLA4',
#                                    'PPLC', 'PPLF', 'PPLG', 'PPLL', 'PPLR',
#                                    'PPLS', 'STLMT', ]

# # CELERY
# BROKER_URL = 'redis://localhost:6379'
# CELERY_RESULT_BACKEND = 'redis://localhost:6379'
# CELERY_ACCEPT_CONTENT = ['application/json']
# CELERY_TASK_SERIALIZER = 'json'
# CELERY_RESULT_SERIALIZER = 'json'
# CELERY_TIMEZONE = "Europe/Paris"


# CMS - CK EDITOR
CKEDITOR_UPLOAD_PATH = "ck_uploads"
CKEDITOR_IMAGE_BACKEND = "pillow"
IMAGE_QUALITY = 75
THUMBNAIL_SIZE = (300, 300)
# CKEDITOR_FILENAME_GENERATOR = 'utils.get_filename'
CKEDITOR_ALLOW_NONIMAGE_FILES = False
CKEDITOR_RESTRICT_BY_DATE = False
CKEDITOR_BROWSE_SHOW_DIRS = True
CKEDITOR_CONFIGS = {
    'default': {
        'toolbar': 'Standard',
        'height': 400,
        'width': '100%',
        "language": 'fr',
        "removePlugins": " bidi,flash,forms,language,scayt,wsc,",
        "extraPlugins": "uploadimage,uploadwidget,",
    },
}


# DRF API
REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'DEFAULT_FILTER_BACKENDS': (
        'django_filters.rest_framework.DjangoFilterBackend',
    ),
    'PAGE_SIZE': 20,
}

SWAGGER_SETTINGS = {
    "APIS_SORTER": "alpha",
    "OPERATIONS_SORTER": "alpha",
    "DOC_EXPANSION": "list",
    "SUPPORTED_SUBMIT_METHODS":  ['get', 'post', 'put', 'patch'],
    "LOGIN_URL": "/admin/login",
    "LOGOUT_URL": "/admin/logout",
}

# ADMIN SUIT TEMPLATE
SUIT_CONFIG = {
    # header
    'ADMIN_NAME': "Administration d'El Géo Paso",
    'HEADER_DATE_FORMAT': 'l d F Y',
    'HEADER_TIME_FORMAT': 'H:i',

    # menu
    'SEARCH_URL': '/admin/jobs/offer/',
    'MENU_ICONS': {
       'sites': 'icon-leaf',
       'auth': 'icon-lock',
       'jobs': 'icon-briefcase',
    },

    'MENU': (
        'sites',
        '-',
        {'app': 'auth',
         'icon': 'icon-user',
         'models': ('user', 'group')
         },
        # {'app': 'django_celery_beat',
        #  'icon': 'icon-time',
        #  'label': 'Gestionnaire de celery',
        #  'models': ({'model': 'PeriodicTask',
        #              'label': 'Tâches périodiques'},
        #             {'model': 'CrontabSchedule',
        #              'label': 'Tâches planifiées'},
        #             {'model': 'IntervalSchedule',
        #              'label': 'Intervalles'},)
        #  },
        # {'app': 'cities_light',
        #  'icon': 'icon-globe',
        #  'label': 'Référentiel des lieux',
        #  'models': ({'model': 'City',
        #              'label': 'Villes'},
        #             {'model': 'SubRegion',
        #              'label': 'Départements'},
        #             {'model': 'Region',
        #              'label': 'Régions'},
        #             {'model': 'Country',
        #              'label': 'Pays'},)
        #  },
        '-',
        {'app': 'cms',
         'icon': 'icon-pencil',
         'label': 'Contenu éditorial',
         'models': ({'model': 'article',
                     'label': 'Articles'},
                    {'model': 'category',
                     'label': 'Catégories'},)
         },
        '-',
        {'label': 'Offres',
         'icon': 'icon-briefcase',
         'models': ({'model': 'jobs.offer',
                     'label': 'Offres traitées'},
                    'jobs.georezorss', 'GeorezoHisto')
         },
        '-',
        {"app": "jobs",
         'label': 'Contrats',
         'icon': 'icon-magnet',
         'models': ('jobs.contract', 'jobs.contractvariations')
         },
        {"app": "jobs",
         'label': 'Lieux',
         'icon': 'icon-map-marker',
         'models': ('jobs.place', 'jobs.placevariations')
         },
        {'label': 'Métiers',
         'icon': 'icon-certificate',
         'models': ('jobs.jobposition', 'jobs.jobpositionvariations')
         },
        {'label': 'Technologies',
         'icon': 'icon-wrench',
         'models': ('jobs.technology', 'jobs.technologyvariations')
         },
        {'label': 'Autres',
         'icon': 'icon-adjust',
         'models': ('jobs.source', )
         },
    ),

    # misc
    'LIST_PER_PAGE': 20
}
