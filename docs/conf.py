# Configuration file for the Sphinx documentation builder.
#
# This file only contains a selection of the most common options. For a full
# list see the documentation:
# https://www.sphinx-doc.org/en/master/usage/configuration.html

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
import os
import sys

sys.path.insert(0, os.path.abspath(".."))

# 3rd party
import django
import recommonmark
from recommonmark.transform import AutoStructify

# Project
from elgeopaso import __about__


# -- Build environment -----------------------------------------------------
on_rtd = os.environ.get("READTHEDOCS", None) == "True"
os.environ["DJANGO_SETTINGS_MODULE"] = "elgeopaso.settings.local"
django.setup()

# -- Project information -----------------------------------------------------

project = __about__.__title__
author = __about__.__author__
copyright = __about__.__copyright__

# The full version, including alpha/beta/rc tags
version = release = __about__.__version__

# -- General configuration ---------------------------------------------------

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    "recommonmark",
    "sphinx_copybutton",
    "sphinx.ext.autodoc",
    "sphinx_autodoc_typehints",
    "sphinx_markdown_tables",
    "sphinx_rtd_theme",
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ["_templates"]

# source_suffix = ['.rst', '.md']
source_suffix = {".rst": "restructuredtext", ".md": "markdown"}

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = "fr"

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = ["_build", "samples/*", "Thumbs.db", ".DS_Store", "*env*", "libs/*"]


# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = "sphinx_rtd_theme"

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ["_static"]

# Ensure sidebar is the same along the pages
html_sidebars = {
    "**": ["globaltoc.html", "relations.html", "sourcelink.html", "searchbox.html"]
}

# Language to be used for generating the HTML full-text search index.
# Sphinx supports the following languages:
#   'da', 'de', 'en', 'es', 'fi', 'fr', 'hu', 'it', 'ja'
#   'nl', 'no', 'pt', 'ro', 'ru', 'sv', 'tr'
html_search_language = "fr"

# The master toctree document.
master_doc = "index"

# -- Options for extensions -------------------------------------------------

# -- intersphinx: refer to others sphinx docs
intersphinx_mapping = {
    "python": ("https://docs.python.org/fr/3/", None),
    "django": ("https://django.readthedocs.org/en/stable/", None),
}

# -- recommonmark
github_doc_root = __about__.__uri__ + "tree/master/docs"

# -- API autodoc
# run api doc
def run_apidoc(_):
    from sphinx.ext.apidoc import main

    cur_dir = os.path.normpath(os.path.dirname(__file__))
    output_path = os.path.join(cur_dir, "_apidoc")
    modules = os.path.normpath(os.path.join(cur_dir, "../elgeopaso"))
    exclusions = []
    main(["-e", "-f", "-M", "-o", output_path, modules] + exclusions)


# launch setup
def setup(app):
    # api autodoc
    app.connect("builder-inited", run_apidoc)

    # structify
    app.add_config_value(
        "recommonmark_config",
        {
            "url_resolver": lambda url: github_doc_root + url,
            "auto_toc_tree_section": "Contents",
            "enable_auto_toc_tree": True,
            "enable_eval_rst": True,
        },
        True,
    )
    app.add_transform(AutoStructify)
